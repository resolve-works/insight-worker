name: package

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-platform-images:
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            arch_suffix: amd64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            arch_suffix: arm64

    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Create platform-specific tags
        id: platform_tags
        run: |
          TAGS=""
          # Process each tag from meta.outputs.tags and add platform suffix
          for TAG in $(echo "${{ steps.meta.outputs.tags }}" | tr '\n' ' '); do
            if [ -n "$TAGS" ]; then
              TAGS="${TAGS},"
            fi
            # Add platform suffix to tag
            TAGS="${TAGS}${TAG}-${{ matrix.arch_suffix }}"
          done
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          tags: ${{ steps.platform_tags.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-manifest:
    needs: build-and-push-platform-images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Create and push manifest
        run: |
          # Process each tag
          for TAG in $(echo "${{ steps.meta.outputs.tags }}" | tr '\n' ' '); do
            # Create manifest list for this tag
            docker buildx imagetools create --tag ${TAG} \
              ${TAG}-amd64 \
              ${TAG}-arm64
          done
